{"version":3,"sources":["context/CategoriesContext.js","context/RecipeContext.js","Components/Form.js","Components/Header.js","context/ModalContext.js","Components/Recipe.js","Components/RecipeList.js","App.js","reportWebVitals.js","index.js"],"names":["CategoriesContext","createContext","CategoriesProvider","props","useState","categories","setCategories","useEffect","a","axios","get","data","drinks","getCategories","Provider","value","children","RecipeContext","RecipeProvider","recipes","setRecipes","name","category","searchRecipe","setSearchRecipe","search","saveSearch","URL","result","getRecipes","Form","useContext","setSearch","getRecipe","e","target","className","onSubmit","preventDefault","type","placeholder","onChange","map","strCategory","Header","ModalContext","ModalProvider","idRecipe","setIdRecipe","recipeInfo","setRecipesInfo","getModalInfo","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","Recipe","recipe","modalStyle","open","setOpen","classes","strDrink","src","strDrinkThumb","alt","onClick","idDrink","Modal","onClose","style","strInstructions","info","ingredients","i","console","log","push","getIngredients","RecipeList","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAGaA,EAAoBC,0BAyBlBC,EAvBY,SAACC,GAAW,IAAD,EACAC,mBAAS,IADT,mBAC7BC,EAD6B,KACjBC,EADiB,KAYpC,OATAC,qBAAU,YACW,uCAAG,4BAAAC,EAAA,4DACR,8DADQ,SAEKC,IAAMC,IADnB,+DADQ,OAEdL,EAFc,OAGpBC,EAAcD,EAAWM,KAAKC,QAHV,2CAAH,qDAKnBC,KACC,IAGD,cAACb,EAAkBc,SAAnB,CACEC,MAAO,CACLV,cAFJ,SAMGF,EAAMa,YCrBAC,EAAgBhB,0BAqCdiB,EAnCQ,SAACf,GAAW,IAAD,EACFC,mBAAS,IADP,mBACzBe,EADyB,KAChBC,EADgB,OAEQhB,mBAAS,CAC/CiB,KAAM,GACNC,SAAU,KAJoB,mBAEzBC,EAFyB,KAEXC,EAFW,OAOHpB,oBAAS,GAPN,mBAOzBqB,EAPyB,KAOjBC,EAPiB,KASzBL,EAAkBE,EAAlBF,KAAMC,EAAYC,EAAZD,SAcb,OAZAf,qBAAU,WACLkB,GACe,uCAAG,8BAAAjB,EAAA,6DACXmB,EADW,mEACwDN,EADxD,cACoEC,GADpE,SAEIb,IAAMC,IAAIiB,GAFd,OAEXC,EAFW,OAGjBR,EAAWQ,EAAOjB,KAAKC,QAHN,2CAAH,oDAKhBiB,KAGD,CAACN,IAGF,cAACN,EAAcH,SAAf,CACEC,MAAO,CACLI,UACAK,kBACAE,cAJJ,SAMGvB,EAAMa,Y,eCsCEc,EArEF,WAAO,IACXzB,EAAc0B,qBAAW/B,GAAzBK,WADU,EAEqB0B,qBAAWd,GAA1CO,EAFU,EAEVA,gBAAiBE,EAFP,EAEOA,WAFP,EAIWtB,mBAAS,CACnCiB,KAAM,GACNC,SAAU,KANK,mBAIVG,EAJU,KAIFO,EAJE,KASXC,EAAY,SAAAC,GAChBF,EAAU,2BACLP,GADI,kBAENS,EAAEC,OAAOd,KAAOa,EAAEC,OAAOpB,UAU9B,OACE,uBAAMqB,UAAU,SACdC,SARiB,SAACH,GACpBA,EAAEI,iBACFd,EAAgBC,GAChBC,GAAW,IAIX,UAGE,0BAAUU,UAAU,cAApB,SACE,kFAGF,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,uBACEG,KAAK,OACLlB,KAAK,OACLe,UAAU,eACVI,YAAY,uBACZC,SAAUR,MAGd,qBAAKG,UAAU,gBAAf,SACE,yBACEf,KAAK,WACLe,UAAU,eACVK,SAAUR,EAHZ,UAKE,wBAAQlB,MAAM,GAAd,6BACCV,EAAWqC,KAAI,SAAApB,GAAQ,OACtB,wBAEEP,MAAOO,EAASqB,YAFlB,SAIGrB,EAASqB,aAHLrB,EAASqB,qBAStB,qBAAKP,UAAU,iBAAf,SACE,uBACEG,KAAK,SACLH,UAAU,4BACVrB,MAAM,4BCxDH6B,EARA,WACb,OACE,wBAAQR,UAAU,WAAlB,SACE,6D,gBCFOS,EAAe5C,0BA+Bb6C,EA7BO,SAAC3C,GAAW,IAAD,EAECC,mBAAS,MAFV,mBAExB2C,EAFwB,KAEdC,EAFc,OAGM5C,mBAAS,IAHf,mBAGxB6C,EAHwB,KAGZC,EAHY,KAgB/B,OAVA3C,qBAAU,YACU,uCAAG,8BAAAC,EAAA,yDACfuC,EADe,wDAEbpB,EAFa,mEAEsDoB,GAFtD,SAGEtC,IAAMC,IAAIiB,GAHZ,OAGbC,EAHa,OAInBsB,EAAetB,EAAOjB,KAAKC,OAAO,IAJf,2CAAH,qDAMlBuC,KACC,CAACJ,IAGF,cAACF,EAAa/B,SAAd,CACEC,MAAO,CACLkC,aACAD,cACAE,kBAJJ,SAOG/C,EAAMa,YCvBb,SAASoC,IAIP,MAAO,CACLC,IAAI,GAAD,OAJO,GAIP,KACHC,KAAK,GAAD,OAJO,GAIP,KACJC,UAAU,cAAD,OANC,GAMD,eALE,GAKF,OAIb,IAAMC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,MAAO,CACLC,SAAU,WACVC,MAAO,IACPC,gBAAiBJ,EAAMK,QAAQC,WAAWL,MAC1CM,UAAWP,EAAMQ,QAAQ,GACzBC,QAAST,EAAMU,QAAQ,EAAG,EAAG,QAKpBC,EAAS,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAAY,EACblE,mBAASgD,GAAvBmB,EAD2B,sBAEVnE,oBAAS,GAFC,mBAE3BoE,EAF2B,KAErBC,EAFqB,KAG5BC,EAAUlB,IAHkB,EAcgBzB,qBAAWc,GAAtDI,EAd2B,EAc3BA,WAAYD,EAde,EAcfA,YAAaE,EAdE,EAcFA,eAkBhC,OACE,qBAAKd,UAAU,gBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BkC,EAAOK,WACpC,qBACEC,IAAKN,EAAOO,cACZC,IAAKR,EAAOK,SACZvC,UAAU,iBACZ,sBAAKA,UAAU,YAAf,UACE,wBACEG,KAAK,SACLH,UAAU,4BACV2C,QACE,WACE/B,EAAYsB,EAAOU,SACnB9B,EAAe,IAzC3BuB,GAAQ,IAmCF,yBAcA,cAACQ,EAAA,EAAD,CACET,KAAMA,EACNU,QAAS,WACPlC,EAAY,MAhDtByB,GAAQ,IA6CF,SAOE,sBAAKU,MAAOZ,EAAYnC,UAAWsC,EAAQf,MAA3C,UACE,6BAAKV,EAAW0B,WAChB,oBAAIvC,UAAU,OAAd,2BACA,4BAAIa,EAAWmC,kBACf,qBACEhD,UAAU,iBACVwC,IAAK3B,EAAW4B,cAChBC,IAAK7B,EAAW0B,WAElB,6CACA,6BAxDW,SAAAU,GAErB,IADA,IAAIC,EAAc,GACVC,EAAI,EAAEA,EAAI,GAAGA,IACgB,OAAhCF,EAAK,gBAAD,OAAkBE,MACvBC,QAAQC,IAAIJ,EAAK,gBAAD,OAAkBE,KAClCD,EAAYI,KACV,+BACGL,EAAK,gBAAD,OAAkBE,IACtBF,EAAK,aAAD,OAAeE,IAAQ,MAAQF,EAAK,aAAD,OAAeE,IAAQ,UAKvE,OAAOF,GAAQC,EA4CFK,CAAe1C,mBCpFjB2C,EAbI,WAAO,IACjBzE,EAAWY,qBAAWd,GAAtBE,QAEP,OACE,qBAAKiB,UAAU,MAAf,SACGjB,EAAQuB,KAAI,SAAAmD,GAAI,OACf,cAAC,EAAD,CAA2BvB,OAAQuB,GAAtBA,EAAKb,eCeXc,MAlBf,WACE,OACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,sBAAK1D,UAAU,iBAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,eCLG2D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.688ef2ec.chunk.js","sourcesContent":["import React, {createContext, useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\n\r\nexport const CategoriesContext = createContext();\r\n\r\nconst CategoriesProvider = (props) => {\r\n  const [categories, setCategories] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getCategories = async () => {\r\n      const URL = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list'\r\n      const categories = await axios.get(URL)\r\n      setCategories(categories.data.drinks)\r\n    }\r\n    getCategories()\r\n  }, [])\r\n\r\n  return (\r\n    <CategoriesContext.Provider\r\n      value={{\r\n        categories\r\n      }\r\n      }\r\n    >\r\n      {props.children}\r\n    </CategoriesContext.Provider>\r\n  )\r\n}\r\nexport default CategoriesProvider","import React, {createContext, useState, useEffect} from 'react'\r\nimport axios from 'axios';\r\n\r\nexport const RecipeContext = createContext();\r\n\r\nconst RecipeProvider = (props) => {\r\n  const [recipes, setRecipes] = useState([])\r\n  const [searchRecipe, setSearchRecipe] = useState({\r\n    name: '',\r\n    category: ''\r\n  })\r\n\r\n  const [search, saveSearch] = useState(false)\r\n\r\n  const {name, category} = searchRecipe\r\n\r\n  useEffect(() => {\r\n    if(search) {\r\n      const getRecipes = async () => {\r\n        const URL = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ name }&c=${ category }`\r\n        const result = await axios.get(URL)\r\n        setRecipes(result.data.drinks)\r\n      }\r\n      getRecipes()\r\n    }\r\n    /* eslint-disable-next-line */\r\n  }, [searchRecipe])\r\n\r\n  return (\r\n    <RecipeContext.Provider\r\n      value={{\r\n        recipes,\r\n        setSearchRecipe,\r\n        saveSearch\r\n      }}>\r\n      {props.children}\r\n    </RecipeContext.Provider>\r\n  )\r\n\r\n}\r\nexport default RecipeProvider","import React, {useContext, useState} from 'react'\r\nimport {CategoriesContext} from '../context/CategoriesContext'\r\nimport {RecipeContext} from '../context/RecipeContext'\r\n\r\nconst Form = () => {\r\n  const {categories} = useContext(CategoriesContext)\r\n  const {setSearchRecipe, saveSearch} = useContext(RecipeContext)\r\n\r\n  const [search, setSearch] = useState({\r\n    name: '',\r\n    category: ''\r\n  })\r\n\r\n  const getRecipe = e => {\r\n    setSearch({\r\n      ...search,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setSearchRecipe(search)\r\n    saveSearch(true)\r\n  }\r\n\r\n  return (\r\n    <form className=\"col-12\"\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <fieldset className=\"text-center\">\r\n        <legend>Search cocktails by category or ingredient</legend>\r\n      </fieldset>\r\n\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col-md-4 mb-2\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search by ingredient\"\r\n            onChange={getRecipe}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-4 mb-2\">\r\n          <select\r\n            name=\"category\"\r\n            className=\"form-control\"\r\n            onChange={getRecipe}\r\n          >\r\n            <option value=\"\">Select category</option>\r\n            {categories.map(category => (\r\n              <option\r\n                key={category.strCategory}\r\n                value={category.strCategory}\r\n              >\r\n                {category.strCategory}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"col-md-4 mb-29\">\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-block btn-primary\"\r\n            value=\"Search recipes\" />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"bg-alert\">\r\n      <h1>Search Cocktails Recipes</h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, {createContext, useState, useEffect} from 'react'\r\nimport axios from 'axios';\r\n\r\nexport const ModalContext = createContext();\r\n\r\nconst ModalProvider = (props) => {\r\n\r\n  const [idRecipe, setIdRecipe] = useState(null)\r\n  const [recipeInfo, setRecipesInfo] = useState([])\r\n\r\n\r\n  useEffect(() => {\r\n    const getModalInfo = async () => {\r\n      if(!idRecipe) return\r\n      const URL = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${ idRecipe }`\r\n      const result = await axios.get(URL)\r\n      setRecipesInfo(result.data.drinks[0])\r\n    }\r\n    getModalInfo()\r\n  }, [idRecipe])\r\n\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        recipeInfo,\r\n        setIdRecipe,\r\n        setRecipesInfo\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ModalContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ModalProvider\r\n","import React, {useContext, useState} from 'react'\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {ModalContext} from '../context/ModalContext'\r\n// import {ModalConsumer} from '../context/ModalContext';\r\n\r\nfunction getModalStyle () {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${ top }%`,\r\n    left: `${ left }%`,\r\n    transform: `translate(-${ top }%, -${ left }%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\n\r\nexport const Recipe = ({recipe}) => {\r\n  const [modalStyle] = useState(getModalStyle)\r\n  const [open, setOpen] = useState(false)\r\n  const classes = useStyles()\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n\r\n  const {recipeInfo, setIdRecipe, setRecipesInfo} = useContext(ModalContext)\r\n\r\n  const getIngredients = info => {\r\n    let ingredients = []\r\n    for(let i = 1;i < 16;i++) {\r\n      if(info[`strIngredient${ i }`] !== null) {\r\n        console.log(info[`strIngredient${ i }`])\r\n        ingredients.push(\r\n          <li>\r\n            {info[`strIngredient${ i }`]}\r\n            {info[`strMeasure${ i }`] ? ` : ` + info[`strMeasure${ i }`] : null}\r\n          </li>\r\n        )\r\n      }\r\n    }\r\n    return info && ingredients\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-md-4 mb-3\">\r\n      <div className=\"card\">\r\n        <h2 className=\"card-header\">{recipe.strDrink}</h2>\r\n        <img\r\n          src={recipe.strDrinkThumb}\r\n          alt={recipe.strDrink}\r\n          className=\"card-img-top\" />\r\n        <div className=\"card-body\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-block btn-primary\"\r\n            onClick={\r\n              () => {\r\n                setIdRecipe(recipe.idDrink)\r\n                setRecipesInfo({})\r\n                handleOpen()\r\n              }\r\n            }\r\n          >\r\n            View recipe\r\n          </button>\r\n\r\n          <Modal\r\n            open={open}\r\n            onClose={() => {\r\n              setIdRecipe(null)\r\n              handleClose()\r\n            }}\r\n          >\r\n            <div style={modalStyle} className={classes.paper}>\r\n              <h2>{recipeInfo.strDrink}</h2>\r\n              <h3 className=\"mt-4\"> Instructions</h3>\r\n              <p>{recipeInfo.strInstructions}</p>\r\n              <img\r\n                className=\"img-fluid my-4\"\r\n                src={recipeInfo.strDrinkThumb}\r\n                alt={recipeInfo.strDrink}\r\n              />\r\n              <h3>Ingredients</h3>\r\n              <ul>\r\n                {getIngredients(recipeInfo)}\r\n              </ul>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport {RecipeContext} from '../context/RecipeContext'\r\nimport {Recipe} from './Recipe'\r\n\r\nconst RecipeList = () => {\r\n  const {recipes} = useContext(RecipeContext)\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {recipes.map(item => (\r\n        <Recipe key={item.idDrink} recipe={item} />\r\n      ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RecipeList\r\n","import CategoriesProvider from './context/CategoriesContext';\nimport RecipeProvider from './context/RecipeContext';\nimport Form from './Components/Form';\nimport Header from './Components/Header';\nimport RecipeList from './Components/RecipeList';\nimport ModalProvider from './context/ModalContext';\n\nfunction App () {\n  return (\n    <CategoriesProvider>\n      <RecipeProvider>\n        <ModalProvider>\n          <Header />\n          <div className=\"container mt-5\">\n            <div className=\"row\">\n              <Form />\n            </div>\n            <RecipeList />\n          </div>\n        </ModalProvider>\n      </RecipeProvider>\n    </CategoriesProvider>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}